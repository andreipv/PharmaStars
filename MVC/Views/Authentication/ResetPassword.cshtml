@model MVC.Models.ResetPasswordViewModel

@{
    ViewBag.Title = "ResetPassword";
}
<div class="container body-content">
    <div class="container">
        <br /><br />
        <div class="col-md-4 col-md-offset-4">
            @using (Html.BeginForm("ResetPassword", "Authentication", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.HiddenFor(m => m.Code, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-default">Reset password</button>
                </div>
            }

            @if (TempData["error"] != null)
            {
                <p class="text-danger">
                    @TempData["error"].ToString()
                </p>
            }

        </div>
       
    </div>
</div>